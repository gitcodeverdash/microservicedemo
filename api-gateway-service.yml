server:
  port: 8084
spring:
  main:
    web-application-type: reactive

  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true

      routes:
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user/**
          filters:
            - name: CircuitBreaker
              args:
                name: userCircuitBreaker
                fallbackUri: forward:/fallback/user
            - name: Bulkhead
              args:
                name: userBulkhead  # ✅ Corrected

        - id: rating-service
          uri: lb://RATING-SERVICE
          predicates:
            - Path=/rating/**
          filters:
            - name: CircuitBreaker
              args:
                name: ratingCircuitBreaker
                fallbackUri: forward:/fallback/rating
            - name: Bulkhead
              args:
                name: ratingBulkhead  # ✅ Corrected

        - id: hotel-service
          uri: lb://HOTEL-SERVICE
          predicates:
            - Path=/hotel/**
          filters:
            - name: CircuitBreaker
              args:
                name: hotelCircuitBreaker
                fallbackUri: forward:/fallback/hotel
            - name: Bulkhead
              args:
                name: hotelBulkhead  # ✅ Corrected

resilience4j:
  circuitbreaker:
    configs:
      default:
        registerHealthIndicator: true
        slidingWindowSize: 5
        slidingWindowType: COUNT_BASED
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        failureRateThreshold: 50
        waitDurationInOpenState: 10s

    instances:
      userCircuitBreaker:
        baseConfig: default
      ratingCircuitBreaker:
        baseConfig: default
      hotelCircuitBreaker:
        baseConfig: default

# We can't implement directly here, we have to implement it on method level
  # bulkhead:
  #   configs:
  #     default:
  #       maxConcurrentCalls: 10
  #       maxWaitDuration: 500ms

  #   instances:
  #     userBulkhead:
  #       baseConfig: default
  #     ratingBulkhead:
  #       baseConfig: default
  #     hotelBulkhead:
  #       baseConfig: default

eureka:
  instance:
    prefer-ip-address: true
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka/

management:
  endpoints:
    web:
      exposure:
        include: "*"

logging:
  level:
    org.springframework.cloud.gateway: DEBUG
    org.springframework.cloud.gateway.handler.RoutePredicateHandlerMapping: DEBUG
    reactor.netty: DEBUG

