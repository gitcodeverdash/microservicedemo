server:
  port: 8084

spring:
  application:
    name: api-gateway-service

  main:
    web-application-type: reactive  # âœ… Avoid Spring MVC conflict

  cloud:
    gateway:
      server:
        webflux:
          discovery:
            locator:
              enabled: true
              lower-case-service-id: true

          routes:
            - id: user-service
              uri: lb://USER-SERVICE
              predicates:
                - Path=/user/**
              filters:
                - name : CircuitBreaker
                  args:
                    name : userCircuitBreaker
                    fallbackUri: forward:/fallback/user


            - id: rating-service
              uri: lb://RATING-SERVICE
              predicates:
                - Path=/rating/**

            - id: hotel-service
              uri: lb://HOTEL-SERVICE
              predicates:
                - Path=/hotel/**
resilience4j:
  circuitbreaker:
    instances:
      userCircuitBreaker:
        registerHealthIndicator: true
        slidingWindowSize: 5
        slidingWindowType: COUNT_BASED
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        failureRateThreshold: 50
        waitDurationInOpenState: 10s


eureka:
  instance:
    prefer-ip-address: true
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka/

management:
  endpoints:
    web:
      exposure:
        include: "*"

logging:
  level:
    org.springframework.cloud.gateway: DEBUG
    org.springframework.cloud.gateway.handler.RoutePredicateHandlerMapping: DEBUG
    reactor.netty: DEBUG
